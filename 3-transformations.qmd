---
title: "Time Series Analysis & Forecasting Using R"
subtitle: "3. Transformations"
---

## Outline

\vspace*{0.7cm}\tableofcontents

```{r}
#| label: setup
#| include: false
#| cache: false
source("setup.R")
library(purrr)
```

# Per capita adjustments

## Per capita adjustments

```{r gdp-per-capita}
global_economy |>
  filter(Country == "Australia") |>
  autoplot(GDP)
```

## Per capita adjustments

```{r gdp-per-capita2}
global_economy |>
  filter(Country == "Australia") |>
  autoplot(GDP / Population)
```

# Lab Session 6
## Lab Session 6

Consider the GDP information in `global_economy`. Plot the GDP per capita for each country over time. Which country has the highest GDP per capita? How has this changed over time?

# Inflation adjustments

## Inflation adjustments
\fontsize{10}{10}\sf

```{r, eval=FALSE}
print_retail <- aus_retail |>
  filter(Industry == "Newspaper and book retailing") |>
  group_by(Industry) |>
  index_by(Year = year(Month)) |>
  summarise(Turnover = sum(Turnover))
aus_economy <- filter(global_economy, Country == "Australia")
print_retail |>
  left_join(aus_economy, by = "Year") |>
  mutate(Adj_turnover = Turnover / CPI) |>
  pivot_longer(c(Turnover, Adj_turnover),
    names_to = "Type", values_to = "Turnover"
  ) |>
  ggplot(aes(x = Year, y = Turnover)) +
  geom_line() +
  facet_grid(vars(Type), scales = "free_y") +
  labs(x = "Years", y = NULL,
       title = "Turnover: Australian print media industry")
```

## Inflation adjustments
\fontsize{10}{10}\sf

```{r, message=FALSE, warning=FALSE, echo=FALSE, fig.height=5, out.height="90%"}
print_retail <- aus_retail |>
  filter(Industry == "Newspaper and book retailing") |>
  group_by(Industry) |>
  index_by(Year = year(Month)) |>
  summarise(Turnover = sum(Turnover))
aus_economy <- filter(tsibbledata::global_economy, Country == "Australia")
print_retail |>
  left_join(aus_economy, by = "Year") |>
  mutate(Adj_turnover = Turnover / CPI) |>
  pivot_longer(c(Turnover, Adj_turnover),
    names_to = "Type", values_to = "Turnover"
  ) |>
  ggplot(aes(x = Year, y = Turnover)) +
  geom_line() +
  facet_grid(vars(Type), scales = "free_y") +
  labs(
    x = "Years", y = NULL,
    title = "Turnover: Australian print media industry"
  )
```

# Mathematical transformations

## Variance stabilization

\fontsize{13}{15}\sf

If the data show different variation at different levels of the series, then a transformation can be useful.
\pause

Denote original observations as $y_1,\dots,y_n$ and transformed
observations as $w_1, \dots, w_n$.
\pause

\begin{block}{\footnotesize Mathematical transformations for stabilizing
variation}
\begin{tabular}{llc}
Square root & $w_t = \sqrt{y_t}$ & $\downarrow$ \\[0.2cm]
Cube root & $w_t = \sqrt[3]{y_t}$ & Increasing \\[0.2cm]
Logarithm & $w_t = \text{log}(y_t)$  & strength
\end{tabular}
\end{block}
\pause

Logarithms, in particular, are useful because they are more interpretable: changes in a log value are **relative (percent) changes on the original scale**.

## Variance stabilization
\fontsize{12}{14}\sf

```{r food, echo=TRUE}
food <- aus_retail |>
  filter(Industry == "Food retailing") |>
  summarise(Turnover = sum(Turnover))
```

```{r food-plot, echo = FALSE, fig.height=3.8}
food |> autoplot(Turnover) +
  labs(y = "Turnover ($AUD)")
```

## Variance stabilization
\fontsize{12}{14}\sf

```{r food-sqrt1, echo=TRUE, fig.height=3.8}
food |> autoplot(sqrt(Turnover)) +
  labs(y = "Square root turnover")
```

## Variance stabilization
\fontsize{12}{14}\sf

```{r food-cbrt, echo=TRUE, fig.height=3.8}
food |> autoplot(Turnover^(1 / 3)) +
  labs(y = "Cube root turnover")
```

## Variance stabilization
\fontsize{12}{14}\sf

```{r food-log, echo=TRUE, fig.height=3.8}
food |> autoplot(log(Turnover)) +
  labs(y = "Log turnover")
```

## Variance stabilization
\fontsize{12}{14}\sf

```{r food-inverse, echo=TRUE, fig.height=3.8}
food |> autoplot(-1 / Turnover) +
  labs(y = "Inverse turnover")
```

## Box-Cox transformations
\fontsize{13}{15}\sf

Each of these transformations is close to a member of the
family of \textbf{Box-Cox transformations}:
$$w_t = \left\{\begin{array}{ll}
        \text{log}(y_t),      & \quad \lambda = 0; \\
        (\text{sign}(y_t)|y_t|^\lambda-1)/\lambda ,         & \quad \lambda \ne 0.
\end{array}\right.
$$\pause\vspace*{-0.4cm}

* Actually the Bickel-Doksum transformation (allowing for $y_t<0$)
* $\lambda=1$: (No substantive transformation)
* $\lambda=\frac12$: (Square root plus linear transformation)
* $\lambda=0$: (Natural logarithm)
* $\lambda=-1$: (Inverse plus 1)

## Box-Cox transformations

```{r food-anim, cache=TRUE, echo=FALSE, fig.show='animate', interval=1/10, message=FALSE, fig.height=5, fig.width=8, aniopts='controls,buttonsize=0.3cm,width=11.5cm'}
library(rlang)
library(gganimate)
library(latex2exp)
food |>
  mutate(!!!set_names(map(seq(0, 1, 0.01), ~ expr(fabletools::box_cox(Turnover, !!.x))), seq(0, 1, 0.01))) |>
  select(-Turnover) |>
  pivot_longer(-Month, names_to = "lambda", values_to = "Turnover") |>
  mutate(lambda = as.numeric(lambda)) |>
  ggplot(aes(x = Month, y = Turnover)) +
  geom_line() +
  transition_states(1 - lambda, state_length = 0) +
  view_follow() +
  labs(title = "Box-Cox transformed food retailing turnover (lambda = {format(1 - as.numeric(closest_state), digits = 2)})")
```

## Box-Cox transformations

\fontsize{13}{15}\sf

```{r food-lambda, echo=TRUE}
food |>
  features(Turnover, features = guerrero)
```

\pause

* This attempts to balance the seasonal fluctuations and random variation across the series.
* Always check the results.
* A low value of $\lambda$ can give extremely large prediction intervals.

## Box-Cox transformations
\fontsize{13}{14}\sf

```{r food-bc, echo=TRUE,fig.height=3.8}
food |> autoplot(box_cox(Turnover, 0.0895)) +
  labs(y = "Box-Cox transformed turnover")
```

## Transformations
\fontsize{13}{15}\sf

* Often no transformation needed.
* Simple transformations are easier to explain and work well enough.
* Transformations can have very large effect on PI.
* If some data are zero or negative, then use $\lambda>0$.
* `log1p()` can also be useful for data with zeros.
* Choosing logs is a simple way to force forecasts to be positive
* Transformations must be reversed to obtain forecasts on the original scale. (Handled automatically by `fable`.)

# Lab Session 7

## Lab Session 7

\fontsize{13}{14}\sf

1. For the following series, find an appropriate transformation in order to stabilise the variance.

    * United States GDP from `global_economy`
    * Slaughter of Victorian “Bulls, bullocks and steers” in `aus_livestock`
    * Victorian Electricity Demand from `vic_elec`.
    * Gas production from `aus_production`

2. Why is a Box-Cox transformation unhelpful for the `canadian_gas` data?
