{
  "hash": "cec1f652725b5a744fe7ad0c5d848397",
  "result": {
    "markdown": "---\ntitle: \"Time Series Analysis & Forecasting Using R\"\nsubtitle: \"4. Seasonality and trends\"\n---\n\n\n## Outline\n\n\\vspace*{0.7cm}\\tableofcontents\n\n\n\n\n\n\n# Time series decompositions\n\n## Time series decomposition\n\nTrend-Cycle\n: aperiodic changes in level over time.\n\nSeasonal\n: (almost) periodic changes in level due to seasonal factors (e.g., the quarter of the year, the month, or day of the week).\n\n\\begin{block}{Additive decomposition}\\vspace*{-0.3cm}\n\\[ y_t = S_t + T_t + R_t \\]\n\\end{block}\n\\begin{tabular}{@{}llp{8cm}@{}}\nwhere & $y_t=$ & data at period $t$ \\\\\n      & $T_t=$ & trend-cycle component at period $t$\\\\\n      & $S_t=$ & seasonal component at period $t$ \\\\\n      & $R_t=$ & remainder component at period $t$\n\\end{tabular}\n\n## STL decomposition\n\n\\fontsize{13}{14}\\sf\n\n  *  STL: \"Seasonal and Trend decomposition using Loess\"\n  *  Very versatile and robust.\n  *  Seasonal component allowed to change over time, and rate of change controlled by user.\n  *  Smoothness of trend-cycle also controlled by user.\n  *  Optionally robust to outliers\n  *  No trading day or calendar adjustments.\n  *  Only additive.\n  *  Take logs to get multiplicative decomposition.\n  *  Use Box-Cox transformations to get other decompositions.\n\n## US Retail Employment\n\\fontsize{11}{11}\\sf\n\n\n::: {.cell hash='4-decompositions_cache/beamer/usretail_edbecd190ae69e083d195817baaa5e24'}\n\n```{.r .cell-code}\nus_retail_employment <- us_employment |>\n  filter(year(Month) >= 1990, Title == \"Retail Trade\") |>\n  select(-Series_ID)\nus_retail_employment\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 357 x 3 [1M]\n      Month Title        Employed\n      <mth> <chr>           <dbl>\n 1 1990 Jan Retail Trade   13256.\n 2 1990 Feb Retail Trade   12966.\n 3 1990 Mar Retail Trade   12938.\n 4 1990 Apr Retail Trade   13012.\n 5 1990 May Retail Trade   13108.\n 6 1990 Jun Retail Trade   13183.\n 7 1990 Jul Retail Trade   13170.\n 8 1990 Aug Retail Trade   13160.\n 9 1990 Sep Retail Trade   13113.\n10 1990 Oct Retail Trade   13185.\n# i 347 more rows\n```\n:::\n:::\n\n\n\\vspace*{10cm}\n\n## US Retail Employment\n\n\n::: {.cell hash='4-decompositions_cache/beamer/dable1_e8abcf083ba808cfdbfb3c8ebc29125a'}\n\n```{.r .cell-code}\nus_retail_employment |>\n  autoplot(Employed) +\n  labs(y = \"Persons (thousands)\", title = \"Total employment in US retail\")\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/dable1-1.pdf)\n:::\n:::\n\n\n\\vspace*{10cm}\n\n## US Retail Employment\n\\fontsize{11}{11}\\sf\n\n\n::: {.cell hash='4-decompositions_cache/beamer/dable2_288b0afba477237aa32329c17042c1e8'}\n\n```{.r .cell-code}\ndcmp <- us_retail_employment |>\n  model(stl = STL(Employed))\ndcmp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A mable: 1 x 1\n      stl\n  <model>\n1   <STL>\n```\n:::\n:::\n\n\n\\vspace*{10cm}\n\n## US Retail Employment\n\\fontsize{11}{11}\\sf\n\n\n::: {.cell hash='4-decompositions_cache/beamer/dable3_bd7586ccedc134dfbd9767f3ef5e3021'}\n\n```{.r .cell-code}\ncomponents(dcmp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A dable: 357 x 7 [1M]\n# Key:     .model [1]\n# :        Employed = trend + season_year + remainder\n   .model    Month Employed  trend season_year remainder season_adjust\n   <chr>     <mth>    <dbl>  <dbl>       <dbl>     <dbl>         <dbl>\n 1 stl    1990 Jan   13256. 13288.      -33.0      0.836        13289.\n 2 stl    1990 Feb   12966. 13269.     -258.     -44.6          13224.\n 3 stl    1990 Mar   12938. 13250.     -290.     -22.1          13228.\n 4 stl    1990 Apr   13012. 13231.     -220.       1.05         13232.\n 5 stl    1990 May   13108. 13211.     -114.      11.3          13223.\n 6 stl    1990 Jun   13183. 13192.      -24.3     15.5          13207.\n 7 stl    1990 Jul   13170. 13172.      -23.2     21.6          13193.\n 8 stl    1990 Aug   13160. 13151.       -9.52    17.8          13169.\n 9 stl    1990 Sep   13113. 13131.      -39.5     22.0          13153.\n10 stl    1990 Oct   13185. 13110.       61.6     13.2          13124.\n# i 347 more rows\n```\n:::\n:::\n\n\n\\vspace*{10cm}\n\n## US Retail Employment\n\n\n::: {.cell hash='4-decompositions_cache/beamer/usretail-stl_103c69adbb7fd20d08fb197799b5fdb9'}\n\n```{.r .cell-code}\ncomponents(dcmp) |> autoplot()\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/usretail-stl-1.pdf)\n:::\n:::\n\n\n## US Retail Employment\n\n\n::: {.cell hash='4-decompositions_cache/beamer/dable4_5d727d0b49c9908b7ee4587e3cd38082'}\n\n```{.r .cell-code}\nus_retail_employment |>\n  autoplot(Employed, color = \"gray\") +\n  autolayer(components(dcmp), trend, color = \"#D55E00\") +\n  labs(y = \"Persons (thousands)\", title = \"Total employment in US retail\")\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/dable4-1.pdf)\n:::\n:::\n\n\n\\vspace*{10cm}\n\n## US Retail Employment\n\n\n::: {.cell hash='4-decompositions_cache/beamer/usretail3_8c544ab027a508c02476385ce1da9dbc'}\n\n```{.r .cell-code}\ncomponents(dcmp) |> gg_subseries(season_year)\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/usretail3-1.pdf)\n:::\n:::\n\n\n## Seasonal adjustment\n\n  *  Useful by-product of decomposition:  an easy way to calculate seasonally adjusted data.\n  *  Additive decomposition: seasonally adjusted data given by\n$$y_t - S_t = T_t + R_t$$\n  *  Multiplicative decomposition: seasonally adjusted data given by\n$$y_t / S_t = T_t \\times R_t$$\n\n## US Retail Employment\n\n\n::: {.cell hash='4-decompositions_cache/beamer/usretail-sa_8b5523ec72157054968937ff4430ad6d'}\n\n```{.r .cell-code}\nus_retail_employment |>\n  autoplot(Employed, color = \"gray\") +\n  autolayer(components(dcmp), season_adjust, color = \"#0072B2\") +\n  labs(y = \"Persons (thousands)\", title = \"Total employment in US retail\")\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/usretail-sa-1.pdf)\n:::\n:::\n\n\n## Seasonal adjustment\n\n  * We use estimates of $S$ based on past values to seasonally adjust a current value.\n  *  Seasonally adjusted series reflect **remainders** as well as **trend**. Therefore they are not \"smooth\" and \"downturns\" or \"upturns\" can be misleading.\n  *  It is better to use the trend-cycle component to look for turning points.\n\n## STL decomposition\n\n\n::: {.cell hash='4-decompositions_cache/beamer/stlwindowanim_0a50d635d7feb6af207ef78718cd72f7'}\n::: {.cell-output-display}\n```{=latex}\n\\animategraphics[,controls,buttonsize=0.3cm,width=11.5cm]{10}{4-decompositions_files/figure-beamer/stlwindowanim-}{1}{100}\n```\n:::\n:::\n\n\n\\vspace*{10cm}\n\n## STL decomposition\n\n\n::: {.cell hash='4-decompositions_cache/beamer/unnamed-chunk-2_97d7c711361460e605bb3560b2acc4e6'}\n\n```{.r .cell-code}\nus_retail_employment |>\n  model(STL(Employed ~ trend(window = 15) + season(window = \"periodic\"),\n    robust = TRUE\n  )) |>\n  components()\n```\n:::\n\n\n\\fontsize{12}{13}\\sf\n\n  *  `trend(window = ?)` controls wiggliness of trend component.\n  *  `season(window = ?)` controls variation on seasonal component.\n  *  `season(window = 'periodic')` is equivalent to an infinite window.\n\n## STL decomposition\n\n\n::: {.cell hash='4-decompositions_cache/beamer/mstl_5c460dc98fed647f792a930de5af8c8e'}\n\n```{.r .cell-code}\nus_retail_employment |>\n  model(STL(Employed)) |>\n  components() |>\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/mstl-1.pdf)\n:::\n:::\n\n\n\\only<2>{\\begin{textblock}{7}(8,0.2)\\fontsize{11}{11}\\sf\n\\begin{alertblock}{}\n\\begin{itemize}\\tightlist\n\\item \\texttt{STL()} chooses \\texttt{season(window=13)} by default\n\\item Can include transformations.\n\\end{itemize}\n\\end{alertblock}\n\\end{textblock}}\n\n## STL decomposition\n\\fontsize{13}{15}\\sf\n\n* Algorithm that updates trend and seasonal components iteratively.\n* Starts with $\\hat{T}_t=0$\n* Uses a mixture of loess and moving averages to successively refine the trend and seasonal estimates.\n* trend window controls loess bandwidth on deasonalised values.\n* season window controls loess bandwidth on detrended subseries.\n* Robustness weights based on remainder.\n* Default season: `window = 13`\n* Default trend:\\newline\\mbox{}\\hfill `window = nextodd(ceiling((1.5*period)/(1-(1.5/s.window)))`\n* `window` values should be odd numbers for symmetry.\n\n## Australian holidays\n\n\n\n\n::: {.cell hash='4-decompositions_cache/beamer/holidays-plot2_e5e03e501f7a0cc4052c09a8d2b646f7'}\n\n```{.r .cell-code}\nholidays |> autoplot(Trips) +\n  labs(y = \"thousands of trips\", x = \"Year\",\n       title = \"Australian domestic holiday nights\")\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/holidays-plot2-1.pdf)\n:::\n:::\n\n\n## Australian holidays\n\n\n::: {.cell hash='4-decompositions_cache/beamer/stlagain2_15f2cd051c15dfa467a8eaefb81b2893'}\n\n```{.r .cell-code}\nholidays |>\n  model(stl = STL(Trips)) |>\n  components() |>\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/stlagain2-1.pdf)\n:::\n:::\n\n\n## Holidays decomposition\n\\fontsize{9}{10}\\sf\n\n\n::: {.cell hash='4-decompositions_cache/beamer/holidays2_05e3d0c5f9d36f401922e67fc50aecfd'}\n\n```{.r .cell-code}\ndcmp <- holidays |>\n  model(stl = STL(Trips)) |>\n  components()\ndcmp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A dable: 640 x 8 [1Q]\n# Key:     State, .model [8]\n# :        Trips = trend + season_year + remainder\n   State .model Quarter Trips trend season_year remainder season_adjust\n   <chr> <chr>    <qtr> <dbl> <dbl>       <dbl>     <dbl>         <dbl>\n 1 ACT   stl    1998 Q1  196.  172.       -8.48     32.6           205.\n 2 ACT   stl    1998 Q2  127.  157.       10.3     -40.6           116.\n 3 ACT   stl    1998 Q3  111.  142.      -16.8     -14.5           128.\n 4 ACT   stl    1998 Q4  170.  130.       14.6      25.6           156.\n 5 ACT   stl    1999 Q1  108.  135.       -8.63    -18.3           116.\n 6 ACT   stl    1999 Q2  125.  148.       11.0     -34.6           114.\n 7 ACT   stl    1999 Q3  178.  166.      -16.0      28.3           194.\n 8 ACT   stl    1999 Q4  218.  177.       13.2      27.5           204.\n 9 ACT   stl    2000 Q1  158.  169.       -8.75     -1.96          167.\n10 ACT   stl    2000 Q2  155.  151.       11.7      -8.20          143.\n# i 630 more rows\n```\n:::\n:::\n\n\n## Holidays decomposition\n\\fontsize{9}{10}\\sf\n\n\n::: {.cell hash='4-decompositions_cache/beamer/holidays3_dadb9d9f778ca5ac29285f13e8780853'}\n\n```{.r .cell-code}\ndcmp |> gg_subseries(season_year)\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/holidays3-1.pdf)\n:::\n:::\n\n\n## Holidays decomposition\n\\fontsize{9}{10}\\sf\n\n\n::: {.cell hash='4-decompositions_cache/beamer/holidays-trend_9cae8e1c37d4eaa6e5f2532df9752726'}\n\n```{.r .cell-code}\nautoplot(dcmp, trend, scale_bars = FALSE) +\n  autolayer(holidays, alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/holidays-trend-1.pdf){height=70%}\n:::\n:::\n\n\n# Lab Session 8\n\n## Lab Session 8\n\\fontsize{13}{14}\\sf\n\n1. Produce the following decomposition\n\n    \\fontsize{9}{11}\\sf\n\n    ```r\n    canadian_gas |>\n      model(STL(Volume ~ season(window=7) + trend(window=11))) |>\n      components() |>\n      autoplot()\n    ```\n\n    \\fontsize{13}{14}\\sf\n\n2. What happens as you change the values of the two `window` arguments?\n\n3. How does the seasonal shape change over time? [Hint: Try plotting the seasonal component using `gg_season`.]\n\n4. Can you produce a plausible seasonally adjusted series? [Hint: `season_adjust` is one of the variables returned by `STL`.]\n\n# Multiple seasonality\n\n## Multiple seasonality\n\\fontsize{9}{9}\\sf\n\n```r\nvic_elec |>\n  model(STL(Demand)) |>\n  components() |>\n  autoplot()\n```\n\n\n::: {.cell hash='4-decompositions_cache/beamer/vic_elec_88a5b33d5005fa2c8dc879bc7d55dbce'}\n\n:::\n\n\n\\placefig{7}{0.2}{width=8.7cm, height=20cm}{vic_elec_stl}\n\n\\vspace*{10cm}\n\n# The ABS stuff-up\n\n## The ABS stuff-up\n\n\\full{abs1}\n\n## The ABS stuff-up\n\n\\full{abs2}\n\n## The ABS stuff-up\n\n\\full{abs3}\n\n## The ABS stuff-up\n\n\n::: {.cell hash='4-decompositions_cache/beamer/abs1_ef190d812c47be96a4820bd43b2798a2'}\n\n:::\n\n\n\\fontsize{11}{11}\\sf\n\n\n::: {.cell hash='4-decompositions_cache/beamer/abs2_8be8a8e2afbdce4d5c9606dbf54c5e09'}\n\n```{.r .cell-code}\nemployed\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 440 x 4 [1M]\n       Time Month  Year Employed\n      <mth> <ord> <dbl>    <dbl>\n 1 1978 Feb Feb    1978    5986.\n 2 1978 Mar Mar    1978    6041.\n 3 1978 Apr Apr    1978    6054.\n 4 1978 May May    1978    6038.\n 5 1978 Jun Jun    1978    6031.\n 6 1978 Jul Jul    1978    6036.\n 7 1978 Aug Aug    1978    6005.\n 8 1978 Sep Sep    1978    6024.\n 9 1978 Oct Oct    1978    6046.\n10 1978 Nov Nov    1978    6034.\n# i 430 more rows\n```\n:::\n:::\n\n\n## The ABS stuff-up\n\n\n::: {.cell hash='4-decompositions_cache/beamer/abs3_a60bfdf8e26f8ea33d250738ca6a0332'}\n\n```{.r .cell-code}\nemployed |>\n  autoplot(Employed) +\n  labs(title = \"Total employed\", y = \"Thousands\")\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/abs3-1.pdf)\n:::\n:::\n\n\n## The ABS stuff-up\n\n\n::: {.cell hash='4-decompositions_cache/beamer/abs4_da12728c96d1d372247bb723c8398434'}\n\n```{.r .cell-code}\nemployed |>\n  filter(Year >= 2005) |>\n  autoplot(Employed) +\n  labs(title = \"Total employed\", y = \"Thousands\")\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/abs4-1.pdf)\n:::\n:::\n\n\n## The ABS stuff-up\n\n\n::: {.cell hash='4-decompositions_cache/beamer/abs5_753db5a8c536eef8dd442676b004fe8a'}\n\n```{.r .cell-code}\nemployed |>\n  filter(Year >= 2005) |>\n  gg_season(Employed, labels = \"right\") +\n  labs(title = \"Total employed\", y = \"Thousands\")\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/abs5-1.pdf)\n:::\n:::\n\n\n## The ABS stuff-up\n\n\n::: {.cell hash='4-decompositions_cache/beamer/abs6_feeae1f93716603e3b937edc1f2cfe12'}\n\n```{.r .cell-code}\nemployed |>\n  mutate(diff = difference(Employed)) |>\n  filter(Month == \"Sep\") |>\n  ggplot(aes(y = diff, x = 1)) +\n  geom_boxplot() +\n  coord_flip() +\n  labs(title = \"Sep - Aug: total employed\", y = \"Thousands\") +\n  scale_x_continuous(breaks = NULL, labels = NULL)\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/abs6-1.pdf)\n:::\n:::\n\n\n## The ABS stuff-up\n\n\n::: {.cell hash='4-decompositions_cache/beamer/abs7_e3ccde3a92217d37724ba47a993646c2'}\n\n```{.r .cell-code}\ndcmp <- employed |>\n  filter(Year >= 2005) |>\n  model(stl = STL(Employed ~ season(window = 11), robust = TRUE))\ncomponents(dcmp) |> autoplot()\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/abs7-1.pdf)\n:::\n:::\n\n\n## The ABS stuff-up\n\n\n::: {.cell hash='4-decompositions_cache/beamer/abs8_b8b18b7efcd1ba0106b7e3d068f7d987'}\n\n```{.r .cell-code}\ncomponents(dcmp) |>\n  filter(year(Time) == 2013) |>\n  gg_season(season_year) +\n  labs(title = \"Seasonal component\") + guides(colour = \"none\")\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/abs8-1.pdf)\n:::\n:::\n\n\n## The ABS stuff-up\n\n\n::: {.cell hash='4-decompositions_cache/beamer/abs9_2d28f0177a43fb673e7f6e8592177e27'}\n\n```{.r .cell-code}\ncomponents(dcmp) |>\n  as_tsibble() |>\n  autoplot(season_adjust)\n```\n\n::: {.cell-output-display}\n![](4-decompositions_files/figure-beamer/abs9-1.pdf)\n:::\n:::\n\n\n## The ABS stuff-up\n\\fontsize{13}{15}\\sf\n\n  *  August 2014 employment numbers higher than expected.\n  *  Supplementary survey usually conducted in August for employed people.\n  *  Most likely, some employed people were claiming to be unemployed in August to avoid supplementary questions.\n  *  Supplementary survey not run in 2014, so no motivation to lie about employment.\n  *  In previous years, seasonal adjustment fixed the problem.\n  *  The ABS has now adopted a new method to avoid the bias.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "\\usepackage{animate}\n"
      ]
    },
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}