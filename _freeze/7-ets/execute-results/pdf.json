{
  "hash": "2cef267d01b948ad7b3a971941612b7f",
  "result": {
    "markdown": "---\ntitle: \"Time Series Analysis & Forecasting Using R\"\nsubtitle: \"7. Exponential smoothing\"\n---\n\n\n## Outline\n\n\\vspace*{0.7cm}\\tableofcontents\n\n\n\n\n\n\n# Exponential smoothing\n\n## Pharmaceutical Benefits Scheme\n\n\\full{pills}\n\n## Pharmaceutical Benefits Scheme\n\n### The Pharmaceutical Benefits Scheme (PBS) is the Australian government drugs subsidy scheme.\n\n  * Many drugs bought from pharmacies are subsidised to allow more equitable access to modern drugs.\n  * The cost to government is determined by the number and types of drugs purchased. Currently nearly 1\\% of GDP.\n  * The total cost is budgeted based on forecasts of drug usage.\n\n## Pharmaceutical Benefits Scheme\n\n\\full{pbs2}\n\n## Pharmaceutical Benefits Scheme\n\n  * In 2001: \\$4.5 billion budget, under-forecasted by \\$800 million.\n  * Thousands of products. Seasonal demand.\n  * Subject to covert marketing, volatile products, uncontrollable expenditure.\n  * Although monthly data available for 10 years, data are aggregated to annual values, and only the first three years are used in estimating the forecasts.\n  * All forecasts being done with the \\texttt{FORECAST} function in MS-Excel!\n\n## Historical perspective\n\n * Developed in the 1950s and 1960s as methods (algorithms) to produce point forecasts.\n * Combine a \"level\", \"trend\" (slope) and \"seasonal\" component to describe a time series.\n * The rate of change of the components are controlled by \"smoothing parameters\": $\\alpha$, $\\beta$ and $\\gamma$ respectively.\n  * Need to choose best values for the smoothing parameters (and initial states).\n  * Equivalent ETS state space models developed in the 1990s and 2000s.\n\n## A model for levels, trends, and seasonalities\n\\fontsize{13}{14}\\sf\n\nWe want a model that captures the level ($\\ell_t$), trend ($b_t$) and seasonality ($s_t$).\n\n\\alert{How do we combine these elements?}\n\n\\pause\n\n\\begin{block}{Additively?}\n$y_t = \\ell_{t-1} + b_{t-1} + s_{t-m} + \\varepsilon_t$\n\\end{block}\\pause\n\\begin{block}{Multiplicatively?}\n$y_t = \\ell_{t-1}b_{t-1}s_{t-m}(1 + \\varepsilon_t)$\n\\end{block}\\pause\n\\begin{block}{Perhaps a mix of both?}\n$y_t = (\\ell_{t-1} + b_{t-1}) s_{t-m} + \\varepsilon_t$\n\\end{block}\\pause\n\n\\alert{How do the level, trend and seasonal components evolve over time?}\n\n## ETS models\n\n\\begin{block}{}\n\\hspace*{-0.25cm}\\begin{tabular}{l@{}p{2.3cm}@{}c@{}l}\n\\structure{General n\\rlap{otation}}\n    &       & ~E T S~  & ~:\\hspace*{0.3cm}\\textbf{E}xponen\\textbf{T}ial \\textbf{S}moothing               \\\\ [-0.2cm]\n    & \\hfill{$\\nearrow$\\hspace*{-0.1cm}}        & {$\\uparrow$} & {\\hspace*{-0.2cm}$\\nwarrow$} \\\\\n    & \\hfill{\\textbf{E}rror\\hspace*{0.2cm}} & {\\textbf{T}rend}      & {\\hspace*{0.2cm}\\textbf{S}eason}\n\\end{tabular}\n\\end{block}\n\n\\alert{\\textbf{E}rror:} Additive (`\"A\"`) or multiplicative (`\"M\"`)\n\\pause\n\n\\alert{\\textbf{T}rend:} None (`\"N\"`), additive (`\"A\"`), multiplicative (`\"M\"`), or damped (`\"Ad\"` or `\"Md\"`).\n\\pause\n\n\\alert{\\textbf{S}easonality:} None (`\"N\"`), additive (`\"A\"`) or multiplicative (`\"M\"`)\n\n## ETS(A,N,N): SES with additive errors\n\n\\begin{block}{}\\vspace*{-0.4cm}\n\\begin{align*}\n\\text{Forecast equation}&& \\hat{y}_{T+h|T} &= \\ell_T \\\\\n\\text{Measurement equation}&& y_t &= \\ell_{t-1} + \\varepsilon_t\\\\\n\\text{State equation}&& \\ell_t&=\\ell_{t-1}+\\alpha \\varepsilon_t\n\\end{align*}\n\\end{block}\nwhere $\\varepsilon_t\\sim\\text{NID}(0,\\sigma^2)$.\n\\pause\n\n  * \"innovations\" or \"single source of error\" because equations have the same error process, $\\varepsilon_t$.\n  * Measurement equation: relationship between observations and states.\n  * Transition/state equation(s): evolution of state(s) over time.\n\n\\vspace*{10cm}\n\n## ETS(M,N,N): SES with multiplicative errors\n\n\\begin{block}{}\\vspace*{-0.4cm}\n\\begin{align*}\n\\text{Forecast equation}&& \\hat{y}_{T+h|T} &= \\ell_T \\\\\n\\text{Measurement equation}&& y_t &= \\ell_{t-1}(1 + \\varepsilon_t)\\\\\n\\text{State equation}&& \\ell_t&=\\ell_{t-1}(1+\\alpha \\varepsilon_t)\n\\end{align*}\n\\end{block}\nwhere $\\varepsilon_t\\sim\\text{NID}(0,\\sigma^2)$.\n\\pause\n\n  * Models with additive and multiplicative errors with the same parameters generate the same point forecasts but different prediction intervals.\n\n\\vspace*{10cm}\n\n# Trend methods\n\n## Holt's linear trend\n\\fontsize{13}{15}\\sf\n\n\\begin{block}{Additive errors: ETS(A,A,N)}\\vspace*{-0.4cm}\n\\begin{align*}\n\\text{Forecast equation}&& \\hat{y}_{T+h|T} &= \\ell_T + hb_T\\\\\n\\text{Measurement equation}&& y_t &= \\ell_{t-1}+b_{t-1}+\\varepsilon_t\\\\\n\\text{State equations}&&       \\ell_t&=\\ell_{t-1}+b_{t-1}+\\alpha \\varepsilon_t\\\\\n&&      b_t&=b_{t-1}+\\beta \\varepsilon_t\n\\end{align*}\n\\end{block}\n\\pause\n\n\\begin{block}{Multiplicative errors: ETS(M,A,N)}\\vspace*{-0.4cm}\n\\begin{align*}\n\\text{Forecast equation}&& \\hat{y}_{T+h|T} &= \\ell_T + hb_T\\\\\n\\text{Measurement equation}&& y_t &= (\\ell_{t-1}+b_{t-1})(1+\\varepsilon_t)\\\\\n\\text{State equations}&&       \\ell_t&=(\\ell_{t-1}+b_{t-1})(1+\\alpha \\varepsilon_t)\\\\\n&&      b_t&=b_{t-1}+\\beta (\\ell_{t-1}+b_{t-1})\\varepsilon_t\n\\end{align*}\n\\end{block}\n\n## Example: Australian population\n\n\\fontsize{9}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\naus_economy <- global_economy |>\n  filter(Country == \"Australia\") |>\n  mutate(Pop = Population / 1e6)\nfit <- aus_economy |> model(AAN = ETS(Pop))\nreport(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: Pop \nModel: ETS(A,A,N) \n  Smoothing parameters:\n    alpha = 1 \n    beta  = 0.327 \n\n  Initial states:\n l[0]  b[0]\n 10.1 0.222\n\n  sigma^2:  0.0041\n\n  AIC  AICc   BIC \n-77.0 -75.8 -66.7 \n```\n:::\n:::\n\n\n## Example: Australian population\n\n\\fontsize{10}{11}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncomponents(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A dable: 59 x 7 [1Y]\n# Key:     Country, .model [1]\n# :        Pop = lag(level, 1) + lag(slope, 1) + remainder\n   Country   .model  Year   Pop level slope remainder\n   <fct>     <chr>  <dbl> <dbl> <dbl> <dbl>     <dbl>\n 1 Australia AAN     1959  NA    10.1 0.222 NA       \n 2 Australia AAN     1960  10.3  10.3 0.222 -0.000145\n 3 Australia AAN     1961  10.5  10.5 0.217 -0.0159  \n 4 Australia AAN     1962  10.7  10.7 0.231  0.0418  \n 5 Australia AAN     1963  11.0  11.0 0.223 -0.0229  \n 6 Australia AAN     1964  11.2  11.2 0.221 -0.00641 \n 7 Australia AAN     1965  11.4  11.4 0.221 -0.000314\n 8 Australia AAN     1966  11.7  11.7 0.235  0.0418  \n 9 Australia AAN     1967  11.8  11.8 0.206 -0.0869  \n10 Australia AAN     1968  12.0  12.0 0.208  0.00350 \n# i 49 more rows\n```\n:::\n:::\n\n\n## Example: Australian population\n\n\\fontsize{10}{11}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncomponents(fit) |> autoplot()\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/holt-cmp-plot-1.pdf)\n:::\n:::\n\n\n## Example: Australian population\n\n\\fontsize{12}{12}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  forecast(h = 20) |>\n  autoplot(aus_economy) +\n  labs(y = \"Population\", x = \"Year\")\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/holt-fc-1.pdf)\n:::\n:::\n\n\n## ETS(A,Ad,N): Damped trend method\n\\fontsize{14}{16}\\sf\n\n\\begin{block}{Additive errors}\\vspace*{-0.2cm}\n\\begin{align*}\n\\text{Forecast equation}&& \\hat{y}_{T+h|T} &= \\ell_T + (\\phi + \\cdots + \\phi^{h-1})b_T\\\\\n\\text{Measurement equation}&& y_t &= (\\ell_{t-1}+\\phi b_{t-1})+\\varepsilon_t\\\\\n\\text{State equations}&&       \\ell_t&=(\\ell_{t-1}+\\phi b_{t-1})+\\alpha \\varepsilon_t\\\\\n&&      b_t&=\\phi b_{t-1}+\\beta \\varepsilon_t\n\\end{align*}\n\\end{block}\n\\pause\n\n  * Damping parameter $0<\\phi<1$.\n  * If $\\phi=1$, identical to Holt's linear trend.\n  * As $h\\rightarrow\\infty$, $\\pred{y}{T+h}{T}\\rightarrow \\ell_T+\\phi b_T/(1-\\phi)$.\n  * Short-run forecasts trended, long-run forecasts constant.\n\n## Example: Australian population\n\\fontsize{12}{12}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\naus_economy |>\n  model(holt = ETS(Pop ~ trend(\"Ad\"))) |>\n  forecast(h = 20) |>\n  autoplot(aus_economy)\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/unnamed-chunk-2-1.pdf)\n:::\n:::\n\n\n## Example: National populations\n\n\\fontsize{9}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- global_economy |>\n  mutate(Pop = Population / 1e6) |>\n  model(ets = ETS(Pop))\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A mable: 263 x 2\n# Key:     Country [263]\n   Country                      ets\n   <fct>                    <model>\n 1 Afghanistan         <ETS(A,A,N)>\n 2 Albania             <ETS(M,A,N)>\n 3 Algeria             <ETS(M,A,N)>\n 4 American Samoa      <ETS(M,A,N)>\n 5 Andorra             <ETS(M,A,N)>\n 6 Angola              <ETS(M,A,N)>\n 7 Antigua and Barbuda <ETS(M,A,N)>\n 8 Arab World          <ETS(M,A,N)>\n 9 Argentina           <ETS(A,A,N)>\n10 Armenia             <ETS(M,A,N)>\n# i 253 more rows\n```\n:::\n:::\n\n\n## Example: National populations\n\\fontsize{12}{12}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  forecast(h = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A fable: 1,315 x 5 [1Y]\n# Key:     Country, .model [263]\n   Country     .model  Year             Pop .mean\n   <fct>       <chr>  <dbl>          <dist> <dbl>\n 1 Afghanistan ets     2018    N(36, 0.012) 36.4 \n 2 Afghanistan ets     2019    N(37, 0.059) 37.3 \n 3 Afghanistan ets     2020     N(38, 0.16) 38.2 \n 4 Afghanistan ets     2021     N(39, 0.35) 39.0 \n 5 Afghanistan ets     2022     N(40, 0.64) 39.9 \n 6 Albania     ets     2018 N(2.9, 0.00012)  2.87\n 7 Albania     ets     2019   N(2.9, 6e-04)  2.87\n 8 Albania     ets     2020  N(2.9, 0.0017)  2.87\n 9 Albania     ets     2021  N(2.9, 0.0036)  2.86\n10 Albania     ets     2022  N(2.9, 0.0066)  2.86\n# i 1,305 more rows\n```\n:::\n:::\n\n\n# Lab Session 14\n## Lab Session 14\n\nTry forecasting the Chinese GDP from the `global_economy` data set using an ETS model.\n\nExperiment with the various options in the `ETS()` function to see how much the forecasts change with damped trend, or with a Box-Cox transformation. Try to develop an intuition of what each is doing to the forecasts.\n\n[Hint: use `h=20` when forecasting, so you can clearly see the differences between the various options when plotting the forecasts.]\n\n# Seasonal methods\n\n## \\fontsize{16}{16}\\sf\\bfseries ETS(A,A,A): Holt-Winters additive method\n\n\\begin{block}{}\\vspace*{-0.4cm}\n\\begin{align*}\n\\text{Forecast equation} && \\hat{y}_{t+h|t} &= \\ell_{t} + hb_{t} + s_{t+h-m(k+1)}\\\\\n\\text{Observation equation}&& y_t&=\\ell_{t-1}+b_{t-1}+s_{t-m} + \\varepsilon_t\\\\\n\\text{State equations}&& \\ell_t&=\\ell_{t-1}+b_{t-1}+\\alpha \\varepsilon_t\\\\\n&&        b_t&=b_{t-1}+\\beta \\varepsilon_t \\\\\n&&s_t &= s_{t-m} + \\gamma\\varepsilon_t\n\\end{align*}\n\\end{block}\n\n* $k=$ integer part of $(h-1)/m$.\n* $\\sum_i s_i \\approx 0$.\n* Parameters:&nbsp; $0\\le \\alpha\\le 1$,&nbsp; $0\\le \\beta^*\\le 1$,&nbsp; $0\\le \\gamma\\le 1-\\alpha$&nbsp;  and $m=$  period of seasonality (e.g. $m=4$ for quarterly data).\n\n## \\fontsize{16}{16}\\sf\\bfseries ETS(M,A,M): Holt-Winters multiplicative method\n\n\\begin{block}{}\\vspace*{-0.4cm}\n\\begin{align*}\n\\text{Forecast equation} && \\hat{y}_{t+h|t} &= (\\ell_{t} + hb_{t}) s_{t+h-m(k+1)}\\\\\n\\text{Observation equation}&& y_t&= (\\ell_{t-1}+b_{t-1})s_{t-m}(1 + \\varepsilon_t)\\\\\n\\text{State equations}&& \\ell_t&=(\\ell_{t-1}+b_{t-1})(1+\\alpha \\varepsilon_t)\\\\\n&&        b_t&=b_{t-1}(1+\\beta \\varepsilon_t) \\\\\n&&s_t &= s_{t-m}(1 + \\gamma\\varepsilon_t)\n\\end{align*}\n\\end{block}\n\n* $k$ is integer part of $(h-1)/m$.\n* $\\sum_i s_i \\approx m$.\n* Parameters:&nbsp; $0\\le \\alpha\\le 1$,&nbsp; $0\\le \\beta^*\\le 1$,&nbsp; $0\\le \\gamma\\le 1-\\alpha$&nbsp;  and $m=$  period of seasonality (e.g. $m=4$ for quarterly data).\n\n## Example: Australian holiday tourism\n\n\\fontsize{9}{10}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nholidays <- tourism |>\n  filter(Purpose == \"Holiday\")\nfit <- holidays |> model(ets = ETS(Trips))\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A mable: 76 x 4\n# Key:     Region, State, Purpose [76]\n   Region         State Purpose          ets\n   <chr>          <chr> <chr>        <model>\n 1 Adelaide       SA    Holiday <ETS(A,N,A)>\n 2 Adelaide Hills SA    Holiday <ETS(A,A,N)>\n 3 Alice Springs  NT    Holiday <ETS(M,N,A)>\n 4 Ballarat       VIC   Holiday <ETS(M,N,A)>\n 5 Barkly         NT    Holiday <ETS(A,N,A)>\n 6 Barossa        SA    Holiday <ETS(A,N,N)>\n 7 Bendigo Loddon VIC   Holiday <ETS(M,N,N)>\n 8 Blue Mountains NSW   Holiday <ETS(M,N,M)>\n 9 Brisbane       QLD   Holiday <ETS(A,A,N)>\n10 Bundaberg      QLD   Holiday <ETS(A,N,A)>\n# i 66 more rows\n```\n:::\n:::\n\n\n## Example: Australian holiday tourism\n\n\\fontsize{9}{10}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  filter(Region == \"Snowy Mountains\") |>\n  report()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSeries: Trips \nModel: ETS(M,N,A) \n  Smoothing parameters:\n    alpha = 0.157 \n    gamma = 1e-04 \n\n  Initial states:\n l[0] s[0] s[-1] s[-2] s[-3]\n  142  -61   131 -42.2 -27.7\n\n  sigma^2:  0.0388\n\n AIC AICc  BIC \n 852  854  869 \n```\n:::\n:::\n\n\n## Example: Australian holiday tourism\n\n\\fontsize{9}{10}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  filter(Region == \"Snowy Mountains\") |>\n  components(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A dable: 84 x 9 [1Q]\n# Key:     Region, State, Purpose, .model [1]\n# :        Trips = (lag(level, 1) + lag(season, 4)) * (1 + remainder)\n   Region          State Purpose .model Quarter Trips level season remainder\n   <chr>           <chr> <chr>   <chr>    <qtr> <dbl> <dbl>  <dbl>     <dbl>\n 1 Snowy Mountains NSW   Holiday ets    1997 Q1  NA     NA   -27.7   NA     \n 2 Snowy Mountains NSW   Holiday ets    1997 Q2  NA     NA   -42.2   NA     \n 3 Snowy Mountains NSW   Holiday ets    1997 Q3  NA     NA   131.    NA     \n 4 Snowy Mountains NSW   Holiday ets    1997 Q4  NA    142.  -61.0   NA     \n 5 Snowy Mountains NSW   Holiday ets    1998 Q1 101.   140.  -27.7   -0.113 \n 6 Snowy Mountains NSW   Holiday ets    1998 Q2 112.   142.  -42.2    0.154 \n 7 Snowy Mountains NSW   Holiday ets    1998 Q3 310.   148.  131.     0.137 \n 8 Snowy Mountains NSW   Holiday ets    1998 Q4  89.8  148.  -61.0    0.0335\n 9 Snowy Mountains NSW   Holiday ets    1999 Q1 112.   147.  -27.7   -0.0687\n10 Snowy Mountains NSW   Holiday ets    1999 Q2 103.   147.  -42.2   -0.0199\n# i 74 more rows\n```\n:::\n:::\n\n\n## Example: Australian holiday tourism\n\n\\fontsize{9}{10}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  filter(Region == \"Snowy Mountains\") |>\n  components(fit) |>\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/ausholidays-components-plot-1.pdf)\n:::\n:::\n\n\n## Example: Australian holiday tourism\n\n\\fontsize{9}{10}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |> forecast()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A fable: 608 x 7 [1Q]\n# Key:     Region, State, Purpose, .model [76]\n   Region         State Purpose .model Quarter       Trips .mean\n   <chr>          <chr> <chr>   <chr>    <qtr>      <dist> <dbl>\n 1 Adelaide       SA    Holiday ets    2018 Q1 N(210, 457) 210. \n 2 Adelaide       SA    Holiday ets    2018 Q2 N(173, 473) 173. \n 3 Adelaide       SA    Holiday ets    2018 Q3 N(169, 489) 169. \n 4 Adelaide       SA    Holiday ets    2018 Q4 N(186, 505) 186. \n 5 Adelaide       SA    Holiday ets    2019 Q1 N(210, 521) 210. \n 6 Adelaide       SA    Holiday ets    2019 Q2 N(173, 537) 173. \n 7 Adelaide       SA    Holiday ets    2019 Q3 N(169, 553) 169. \n 8 Adelaide       SA    Holiday ets    2019 Q4 N(186, 569) 186. \n 9 Adelaide Hills SA    Holiday ets    2018 Q1   N(19, 36)  19.4\n10 Adelaide Hills SA    Holiday ets    2018 Q2   N(20, 36)  19.6\n# i 598 more rows\n```\n:::\n:::\n\n\n## Example: Australian holiday tourism\n\n\\fontsize{9}{10}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit |>\n  forecast() |>\n  filter(Region == \"Snowy Mountains\") |>\n  autoplot(holidays) +\n  labs(x = \"Year\", y = \"Overnight trips (thousands)\")\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/ausholidays-forecast-plot-1.pdf)\n:::\n:::\n\n\n# ETS taxonomy\n\n## Exponential smoothing models\n\\fontsize{11}{11}\\sf\n\n\\begin{block}{}\n\\begin{tabular}{ll|ccc}\n  \\multicolumn{2}{l}{\\alert{\\bf Additive Error}} &        \\multicolumn{3}{c}{\\bf Seasonal Component}         \\\\\n          \\multicolumn{2}{c|}{\\bf Trend}         &         N         &         A         &         M         \\\\\n        \\multicolumn{2}{c|}{\\bf Component}       &     ~(None)~      &    (Additive)     & (Multiplicative)  \\\\ \\cline{3-5}\n           &                                     &                   &                   &  \\\\[-0.3cm]\n  N        & (None)                              &       A,N,N       &       A,N,A       &    \\st{A,N,M}     \\\\\n           &                                     &                   &                   &  \\\\[-0.3cm]\n  A        & (Additive)                          &       A,A,N       &       A,A,A       &    \\st{A,A,M}     \\\\\n           &                                     &                   &                   &  \\\\[-0.3cm]\n  A\\damped & (Additive damped)                   &   A,A\\damped,N    &   A,A\\damped,A    & \\st{A,A\\damped,M}\n\\end{tabular}\n\\end{block}\n\n\\begin{block}{}\n\\begin{tabular}{ll|ccc}\n  \\multicolumn{2}{l}{\\alert{\\bf Multiplicative Error}} &     \\multicolumn{3}{c}{\\bf Seasonal Component}      \\\\\n             \\multicolumn{2}{c|}{\\bf Trend}            &      N       &         A         &        M         \\\\\n           \\multicolumn{2}{c|}{\\bf Component}          &   ~(None)~   &    (Additive)     & (Multiplicative) \\\\ \\cline{3-5}\n           &                                           &              &                   &  \\\\[-0.3cm]\n  N        & (None)                                    &    M,N,N     &       M,N,A       &      M,N,M       \\\\\n           &                                           &              &                   &  \\\\[-0.3cm]\n  A        & (Additive)                                &    M,A,N     &       M,A,A       &      M,A,M       \\\\\n           &                                           &              &                   &  \\\\[-0.3cm]\n  A\\damped & (Additive damped)                         & M,A\\damped,N &   M,A\\damped,A    &   M,A\\damped,M\n\\end{tabular}\n\\end{block}\n\n## Estimating ETS models\n\n  * Smoothing parameters $\\alpha$, $\\beta$, $\\gamma$ and $\\phi$, and the initial states $\\ell_0$, $b_0$, $s_0,s_{-1},\\dots,s_{-m+1}$ are estimated by maximising the \"likelihood\" = the probability of the data arising from the specified model.\n  * For models with additive errors equivalent to minimising SSE.\n  * For models with multiplicative errors, \\textbf{not} equivalent to minimising SSE.\n\n## Model selection\n\\fontsize{13}{15}\\sf\n\n\\begin{block}{Akaike's Information Criterion}\n\\[\n\\text{AIC} = -2\\log(\\text{L}) + 2k\n\\]\n\\end{block}\\vspace*{-0.2cm}\nwhere $L$ is the likelihood and $k$ is the number of parameters & initial states estimated in the model.\\pause\n\n\\begin{block}{Corrected AIC}\n\\[\n\\text{AIC}_{\\text{c}} = \\text{AIC} + \\frac{2k(k+1)}{T-k-1}\n\\]\n\\end{block}\\vspace*{-0.4cm}\n\nwhich is the AIC corrected (for small sample bias).\n\\pause\n\\begin{block}{Bayesian Information Criterion}\n\\[\n\\text{BIC} = \\text{AIC} + k(\\log(T)-2).\n\\]\n\\end{block}\n\n## AIC and cross-validation\n\n\\Large\n\n\\begin{alertblock}{}\nMinimizing the AIC assuming Gaussian residuals is asymptotically equivalent to minimizing one-step time series cross validation MSE.\n\\end{alertblock}\n\n## Automatic forecasting\n\n**From Hyndman et al.\\ (IJF, 2002):**\n\n1. Apply each model that is appropriate to the data.\nOptimize parameters and initial values using MLE.\n1. Select best method using AICc.\n1. Produce forecasts using best method.\n1. Obtain forecast intervals using underlying state space model.\n\n* Method performed very well in M3 competition.\n* Used as a benchmark in the M4 competition.\n\n# Lab Session 15\n\n## Lab Session 15\n\nFind an ETS model for the Gas data from `aus_production`.\n\n  * Why is multiplicative seasonality necessary here?\n  * Experiment with making the trend damped. Does it improve the forecasts?\n\n# Non-Gaussian forecast distributions\n\n## Non-Gaussian forecast distributions\n\\fontsize{8.8}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_cafe <- tsibbledata::aus_retail |>\n  filter(State == \"Victoria\",\n         Industry == \"Cafes, restaurants and catering services\") |>\n  select(Month, Turnover)\nvic_cafe |>\n  autoplot(Turnover) + labs(title = \"Monthly turnover of Victorian cafes\")\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/cafe-1.pdf)\n:::\n:::\n\n\n## Forecasting with transformations\n\\fontsize{8.8}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_cafe |> autoplot(box_cox(Turnover, lambda = 0.2))\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/unnamed-chunk-3-1.pdf)\n:::\n:::\n\n\n## Forecasting with transformations\n\\fontsize{8.8}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- vic_cafe |>\n  model(ets = ETS(box_cox(Turnover, 0.2)))\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A mable: 1 x 1\n           ets\n       <model>\n1 <ETS(A,A,A)>\n```\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(fc <- fit |> forecast(h = \"3 years\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A fable: 36 x 4 [1M]\n# Key:     .model [1]\n   .model    Month        Turnover .mean\n   <chr>     <mth>          <dist> <dbl>\n 1 ets    2019 Jan  t(N(13, 0.02))  608.\n 2 ets    2019 Feb t(N(13, 0.028))  563.\n 3 ets    2019 Mar t(N(13, 0.036))  629.\n 4 ets    2019 Apr t(N(13, 0.044))  615.\n 5 ets    2019 May t(N(13, 0.052))  613.\n 6 ets    2019 Jun t(N(13, 0.061))  593.\n 7 ets    2019 Jul t(N(13, 0.069))  624.\n 8 ets    2019 Aug t(N(13, 0.077))  640.\n 9 ets    2019 Sep t(N(13, 0.085))  630.\n10 ets    2019 Oct t(N(13, 0.093))  642.\n# i 26 more rows\n```\n:::\n:::\n\n\n\\only<2>{\\begin{textblock}{5.5}(9.8,2.8)\\fontsize{13}{14}\\sf\n\\begin{alertblock}{}\n\\begin{itemize}\n\\item \\texttt{t(N)} denotes a transformed normal distribution.\n\\item back-transformation and bias adjustment is done automatically.\n\\end{itemize}\n\\end{alertblock}\n\\end{textblock}}\n\n## Forecasting with transformations\n\\fontsize{8.8}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfc |> autoplot(vic_cafe)\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/unnamed-chunk-7-1.pdf)\n:::\n:::\n\n\n## Bootstrapped forecast distributions\n\\fontsize{8.8}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim <- fit |> generate(h = \"3 years\", times = 5, bootstrap = TRUE)\nsim\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tsibble: 180 x 5 [1M]\n# Key:       .model, .rep [5]\n   .model .rep     Month  .innov  .sim\n   <chr>  <chr>    <mth>   <dbl> <dbl>\n 1 ets    1     2019 Jan -0.0211  604.\n 2 ets    1     2019 Feb  0.0483  568.\n 3 ets    1     2019 Mar -0.0307  626.\n 4 ets    1     2019 Apr -0.154   588.\n 5 ets    1     2019 May -0.0467  587.\n 6 ets    1     2019 Jun -0.0458  563.\n 7 ets    1     2019 Jul  0.190   628.\n 8 ets    1     2019 Aug -0.0215  628.\n 9 ets    1     2019 Sep  0.0126  622.\n10 ets    1     2019 Oct  0.0423  640.\n# i 170 more rows\n```\n:::\n:::\n\n\n## Bootstrapped forecast distributions\n\\fontsize{8.8}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvic_cafe |>\n  filter(year(Month) >= 2008) |>\n  ggplot(aes(x = Month)) +\n  geom_line(aes(y = Turnover)) +\n  geom_line(aes(y = .sim, colour = as.factor(.rep)), data = sim) +\n  labs(title = \"Monthly turnover of Victorian cafes\") +\n  guides(col = FALSE)\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/unnamed-chunk-9-1.pdf)\n:::\n:::\n\n\n## Bootstrapped forecast distributions\n\\fontsize{8.8}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfc <- fit |> forecast(h = \"3 years\", bootstrap = TRUE)\nfc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A fable: 36 x 4 [1M]\n# Key:     .model [1]\n   .model    Month     Turnover .mean\n   <chr>     <mth>       <dist> <dbl>\n 1 ets    2019 Jan sample[5000]  608.\n 2 ets    2019 Feb sample[5000]  563.\n 3 ets    2019 Mar sample[5000]  628.\n 4 ets    2019 Apr sample[5000]  615.\n 5 ets    2019 May sample[5000]  613.\n 6 ets    2019 Jun sample[5000]  593.\n 7 ets    2019 Jul sample[5000]  624.\n 8 ets    2019 Aug sample[5000]  640.\n 9 ets    2019 Sep sample[5000]  632.\n10 ets    2019 Oct sample[5000]  643.\n# i 26 more rows\n```\n:::\n:::\n\n\n## Bootstrapped forecast distributions\n\\fontsize{8.8}{9}\\sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfc |> autoplot(vic_cafe) +\n  labs(title = \"Monthly turnover of Victorian cafes\")\n```\n\n::: {.cell-output-display}\n![](7-ets_files/figure-beamer/unnamed-chunk-11-1.pdf)\n:::\n:::\n",
    "supporting": [
      "7-ets_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}